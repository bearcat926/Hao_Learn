"""
Nim游戏
给定 n 堆石子，两位玩家轮流操作，每次操作可以从任意一堆石子中拿走任意数量的石子（可以拿完，但不能不拿），最后无法进行操作的人视为失败。

问如果两人都采用最优策略，先手是否必胜。

输入格式
第一行包含整数 n。

第二行包含 n 个数字，其中第 i 个数字表示第 i 堆石子的数量。

输出格式
如果先手方必胜，则输出 Yes。

否则，输出 No。

数据范围
1 ≤ n ≤ 10^5,
1 ≤ 每堆石子数 ≤ 10^9
输入样例：
2
2 3
输出样例：
Yes
=====================================
博弈论

    公平组合游戏 ICG
        若一个游戏满足：
            1. 由两名玩家交替行动；
            2. 在游戏进程的任意时刻，可以执行的合法行动与轮到哪名玩家无关；
            3. 不能行动的玩家判负；
        则称该游戏为一个公平组合游戏。
        NIM 博弈属于公平组合游戏，但城建的棋类游戏，比如围棋，就不是公平组合游戏。
        因为围棋交战双方分别只能落黑子和白子，胜负判定也比较复杂，不满足条件 2和条件 3.

    NIM 游戏

        先手必胜 -> 可以走到某一个必败状态（即第一步走到一个必败状态）

            a1 ^ a2 ^ ... ^ an ≠ 0

        先手必败 -> 走不到任何一个必败状态（即第一步就是必败状态）

            a1 ^ a2 ^ ... ^ an = 0

        当为先手必胜状态时，设 a1 ^ a2 ^ ... ^ an = x
        则若 x 的二进制表示中，最高一位 1在第k位，说明 a1 ~ an中 仍然存在一个数 ai的第 k位是 1
        并使 ai = ai - (ai - (ai ^ x)), (由 ai ^ x < ai可知操作合法)
        则 x‘ = a1 ^ a2 ^ ... ^ ai ^ x ^ ai+1 ^ ... ^ an  = x ^ x = 0
"""

if __name__ == '__main__':
    n = int(input())
    L = list(map(int, input().split()))
    res = 0
    for i in L:
        res ^= i
    print('Yes' if res >= 1 else 'No')  # res != 0
