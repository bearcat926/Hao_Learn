"""
组合数

    C(a, b) = (a * (a-1) * ... * (a - b + 1)) / (1 * 2 * ... * b) =  a! / (b! * (a - b)!)

    证明
    C(a, b) = C(a - 1, b) + C(a - 1, b - 1)
            = (a - 1)! / (b! * (a - b - 1)!) + (a - 1)! / ((b - 1)! * (a - b)!)
    表达式左项上下同乘(a - b), 右项上下同乘 b
            = ((a - b) * (a - 1)!) / (b! * (a - b)!) + (b * (a - 1)!) / (b! * (a - b)!)
            = ((a - b + b) * (a - 1)!)) / (b! * (a - b)!)
            = a! / (b! * (a - b)!)
            = C(a, b)

==============================================================
求组合数 I
给定 n 组询问，每组询问给定两个整数 a，b，请你输出 C(a, b) mod (10^9+7) 的值。

输入格式
第一行包含整数 n。

接下来 n 行，每行包含一组 a 和 b。

输出格式
共 n 行，每行输出一个询问的解。

数据范围
1 ≤ n ≤ 10000,
1 ≤ b ≤ a ≤ 2000
输入样例：
3
3 1
5 3
2 2
输出样例：
3
10
1
==============================================================
解决方法：

    预处理所有需要的C(b, a)的值
"""

N = 2000 + 10
MOD = 10 ** 9 + 7
# 预处理结果，当 i == j 时 为结果集的上边界，当 j == 1 时 为结果集的右边界，其他值随意
C = [[i if j == 1 else 1 for j in range(i + 1)] for i in range(N)]


def init():
    for a in range(2, N):  # 不处理 b = 1的情况
        for b in range(2, a):  # a > b
            C[a][b] = (C[a - 1][b] + C[a - 1][b - 1]) % MOD  # 别忘了MOD啊


if __name__ == '__main__':
    init()
    n = int(input())
    for i in range(n):
        a, b = map(int, input().split())
        print(C[a][b])
