"""
质数

    分解质因数 - 试除法：O(log_n) ~ O(√n)

        从小到大枚举所有因子，即尝试 n的所有因数

    质因数（素因数或质因子）在数论里是指能整除给定正整数的质数。
    除了1以外，两个没有其他共同质因子的正整数称为互质。
    因为1没有质因子，1与任何正整数（包括1本身）都是互质。
    正整数的因数分解可将正整数表示为一连串的质因子相乘，质因子如重复可以用指数表示。
    根据唯一分解定理(算术基本定理)，任何正整数皆有独一无二的质因子分解式。
    只有一个质因子的正整数为质数。
    每个合数都可以写成几个质数（也可称为素数）相乘的形式，这几个质数就都叫做这个合数的质因数。
=======================================
分解质因数
给定 n 个正整数 ai，将每个数分解质因数，并按照质因数从小到大的顺序输出每个质因数的底数和指数。

输入格式
第一行包含整数 n。

接下来 n 行，每行包含一个正整数 ai。

输出格式
对于每个正整数 ai，按照从小到大的顺序输出其分解质因数后，每个质因数的底数和指数，每个底数和指数占一行。

每个正整数的质因数全部输出完毕后，输出一个空行。

数据范围
1≤n≤100,
1≤ai≤2×10^9
输入样例：
2
6
8
输出样例：
2 1
3 1

2 3
"""


def divide(x):
    if x < 2:
        return
    i = 2
    while i <= x / i:  # math.sqrt(x)比较慢; i * i <= n 存在溢出风险
        if x % i == 0:
            j = 0
            while x % i == 0:
                x //= i
                j += 1
            print(i, j)
        i += 1
    if x > 1:  # 处理i > x / i的部分 =》 即大于√x的质因子 => x最多只有一个大于√x的质因子
        print(x, 1)
    print()


if __name__ == '__main__':
    n = int(input())
    for i in range(n):
        x = int(input())
        divide(x)
